GET query
GET https://dev.azure.com/fabrikam/Fabrikam-Fiber-Git/_apis/wit/queries/{query}?$expand=clauses&api-version=7.1-preview.2
https://learn.microsoft.com/en-us/rest/api/azure/devops/wit/queries/get?view=azure-devops-rest-7.1&tabs=HTTP







import requests
from requests.auth import HTTPBasicAuth
import json

# Replace these variables with your own
organization = 'your-organization-name'
project = 'your-project-name'
pat = 'your-personal-access-token'

# Azure DevOps REST API URL to get all teams in a project
url = f"https://dev.azure.com/{organization}/{project}/_apis/teams?api-version=6.0"

# Making the request
response = requests.get(url, auth=HTTPBasicAuth('', pat))

# Checking if the request was successful
if response.status_code == 200:
    teams = response.json()['value']
    for team in teams:
        print(f"Team Name: {team['name']}")
        print(f"Team ID: {team['id']}")
        print(f"Description: {team.get('description', 'No Description')}\n")
else:
    print(f"Failed to get teams. Status Code: {response.status_code}")
    print(response.text)














========================================================================================================================================================================

    script: |
        import requests
        import base64
        import json

        # Azure DevOps personal access token and organization URL
        personal_access_token = '$()'
        organization = ''
        project = ''
        team = '1001'  # Specify the team if applicable

        # Encode the PAT as a Base64 string
        auth_str = f':{personal_access_token}'
        base64_auth_str = base64.b64encode(auth_str.encode('utf-8')).decode('utf-8')

        # Construct the Authorization header
        headers = {
            'Authorization': f'Basic {base64_auth_str}',
            'Content-Type': 'application/json'
        }
        group_key = '4f434b9d-1c9c-4f14-968d-6087e866d8df'
        # Base URL for Azure DevOps REST API
        base_url = f'https://dev.azure.com/{organization}/{project}/{team}/_apis/dashboard/dashboards?api-version=7.1-preview.3'

        # Dashboard configuration as provided
        dashboard_config = {
        "name": "test123",
        "description": "",
        "refreshInterval": 0,
        "position": 2,
        "widgets": [
            {
                "name": "dashboardquery by Assigned To",
                "position": {
                    "row": 1,
                    "column": 1
                },
                "size": {
                    "rowSpan": 2,
                    "columnSpan": 2
                },
                "settings": json.dumps({
                    "scope": "WorkitemTracking.Queries",
                    "groupKey": group_key,  # Pass the groupKey as a variable here
                    "title": "dashboardquery by Assigned To",
                    "chartType": "PieChart",
                    "transformOptions": {
                        "filter": group_key,  # Pass the groupKey as a variable here
                        "groupBy": "System.AssignedTo",
                        "orderBy": {
                            "direction": "descending",
                            "propertyName": "value"
                        },
                        "measure": {
                            "aggregation": "count",
                            "propertyName": ""
                        },
                        "historyRange": None,
                        "groupByTags": False
                    },
                    "userColors": [],
                    "lastArtifactName": "dashboardquery by Assigned To"
                }),
                "settingsVersion": {
                    "major": 3,
                    "minor": 0,
                    "patch": 0
                },
                "contributionId": "ms.vss-dashboards-web.Microsoft.VisualStudioOnline.Dashboards.WitChartWidget",
                "typeId": "Microsoft.VisualStudioOnline.Dashboards.WitChartWidget",
                "configurationContributionId": "ms.vss-dashboards-web.Microsoft.VisualStudioOnline.Dashboards.WitChartWidget.Configuration",
                "configurationContributionRelativeId": "Microsoft.VisualStudioOnline.Dashboards.WitChartWidget.Configuration",
                "isNameConfigurable": True,
                "loadingImageUrl": "https://dev.azure.com/vasanthan2971/_static/Widgets/ChartLoading.png",
                "lightboxOptions": {
                    "width": 900,
                    "height": 700,
                    "resizable": True
                }
            }
        ],
        "dashboardScope": "project_Team"
        }

        # Making the POST request to create the dashboard
        response = requests.post(
            base_url,
            headers=headers,
            data=json.dumps(dashboard_config)
        )

        # Check the response
        if response.status_code in [200, 201]:
            print("Dashboard created successfully!")
            print("Response:", response.json())
        else:
            print(f"Failed to create dashboard. Status code: {response.status_code}")
            print("Response:", response.text)  # Print the text to debug further
    


