const azdev = require('azure-devops-node-api');

const orgUrl = 'https://dev.azure.com/your-organization-name';
const token = 'YOUR-PERSONAL-ACCESS-TOKEN';
const project = 'YourProjectName'; // Replace with your project name
const parentWorkItemId = 123; // ID of the parent work item
const childWorkItemId = 456; // ID of the child work item

const authHandler = azdev.getPersonalAccessTokenHandler(token);
const connection = new azdev.WebApi(orgUrl, authHandler);

async function linkWorkItems() {
  try {
    const workItemTrackingApi = await connection.getWorkItemTrackingApi();

    // Get the existing work item to modify
    const parentWorkItem = await workItemTrackingApi.getWorkItem(parentWorkItemId, null, null, azdev.WorkItemExpand.Relations);
    
    // Create the relation object
    const relation = {
      rel: 'System.LinkTypes.Hierarchy-Reverse',
      url: `${orgUrl}/${project}/_apis/wit/workItems/${childWorkItemId}`,
      attributes: {
        comment: 'Linking child work item',
      },
    };

    // Add the relation to the existing work item's relations
    parentWorkItem.relations.push(relation);

    // Update the parent work item with the new relation
    await workItemTrackingApi.updateWorkItem(parentWorkItem, parentWorkItemId);

    console.log('Work items linked successfully.');
  } catch (error) {
    console.error('Error linking work items:', error);
  }
}

linkWorkItems();
