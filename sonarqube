const request = require('request');

// Configuration
const SONARQUBE_SERVER = 'http://your-sonarqube-server';
const USERNAME = 'your_username';
const PASSWORD = 'your_password';
const PAGE_SIZE = 100; // Number of issues per page

// Function to fetch vulnerabilities
function fetchVulnerabilities(page = 1) {
  const options = {
    url: `${SONARQUBE_SERVER}/api/issues/search`,
    auth: {
      user: USERNAME,
      pass: PASSWORD
    },
    qs: {
      types: 'VULNERABILITY',
      pageSize: PAGE_SIZE,
      page: page
    },
    json: true
  };

  request(options, (error, response, body) => {
    if (error) {
      console.error('Error fetching vulnerabilities:', error);
      return;
    }

    const issues = body.issues;
    const total = body.total;

    console.log(`Page ${page}: Retrieved ${issues.length} issues out of ${total} total vulnerabilities.`);

    // Process the issues
    issues.forEach(issue => {
      console.log(`Issue Key: ${issue.key}, Severity: ${issue.severity}, Message: ${issue.message}`);
    });

    // Fetch next page if there are more issues
    if (page * PAGE_SIZE < total) {
      fetchVulnerabilities(page + 1);
    }
  });
}

// Start fetching vulnerabilities
fetchVulnerabilities();
