trigger:
  - main

pool:
  vmImage: 'windows-latest'

steps:
  - task: UseJavaVersion@0
    inputs:
      version: '8'  # Use the appropriate Java version here

  - task: SonarQubePrepare@4
    inputs:
      SonarQube: 'SonarQube'  # Name of the SonarQube service connection in Azure DevOps
      scannerMode: 'MSBuild'
      projectKey: 'YourProjectKey'
      projectName: 'YourProjectName'
      projectVersion: '$(Build.BuildNumber)'
      extraProperties: |
        sonar.java.binaries=$(build.sourcesDirectory)/path/to/compiled/code
        sonar.java.test.binaries=$(build.sourcesDirectory)/path/to/compiled/tests
        sonar.java.libraryPaths=$(build.sourcesDirectory)/path/to/libraries
        sonar.java.test.libraries=$(build.sourcesDirectory)/path/to/test/libraries
        sonar.java.source=1.8  # Java version
        sonar.ssl.clientAuth=true
        sonar.ssl.clientCert.passphrase=your_certificate_password
        sonar.ssl.clientCert.path=$(Agent.TempDirectory)/your_cert.jks  # Path to the JKS certificate
        sonar.web.ssl.clientAuth: false
    env:
      SONARQUBE_SCANNER_PARAMS: $(extraProperties)

  - script: 'msbuild /t:Rebuild'
    workingDirectory: '$(build.sourcesDirectory)'

  - task: SonarQubeAnalyze@4

  - task: SonarQubePublish@4
    inputs:
      pollingTimeoutSec: '300'




https://www.mattgerega.com/2023/01/04/publishing-code-coverage-in-both-azure-devops-and-sonarqube/

https://lakshaykaushik2506.medium.com/rendering-code-coverage-report-on-sonarqube-and-azure-devops-4942ece4dda6



set -o pipefail && xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' -enableCodeCoverage YES | xcpretty -r junit --output test-reports/junit.xml







DART:
sonar-project.properties



sonar.projectKey=your_project_key
sonar.projectName=Your Project Name
sonar.sources=lib
sonar.tests=test
sonar.dart.tests.reportPaths=build/test_results.xml






sonar.coverageReportPaths
sonar.cs.vstest.reportsPaths





